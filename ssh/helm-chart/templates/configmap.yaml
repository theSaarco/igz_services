apiVersion: v1
data:
  create-cert.sh: |
    #!/bin/bash

    set -e

  daemon-health.sh: |
    #!/usr/bin/env bash

    cp /usr/local/bin/healthz /var/run/iguazio/daemon_health/healthz
  health_check.sh: |
    #!/usr/bin/env bash
    set -e

    if [ -e "/igz/java/crash/.crash" ]; then
        echo "Found java client crash - exiting"
        exit 310
    fi
    CONFIGURED_V3IOD=$(grep "socket.host" $IGZ_DATA_CONFIG_FILE | cut -f2 -d"=")
    if [ "${CONFIGURED_V3IOD}" != "CURRENT_NODE_IP" ]; then
      /var/run/iguazio/daemon_health/healthz --host ${CONFIGURED_V3IOD}
    fi
  v3io-shell.sh: |
    #!/usr/bin/env bash
    set -e


    LOOKUP_SERVICE=v3iod-locator.{{ .Values.namespace }}.svc:8080
    LOOKUP_URL="http://${LOOKUP_SERVICE}/locate/v3iod"
    LOCAL_V3IOD=$(curl --disable --silent --fail --connect-timeout 10 $LOOKUP_URL/$CURRENT_NODE_IP)

    if [ "${LOCAL_V3IOD}" == "" ]; then
        echo "v3iod address is empty"
        exit 2
    fi

    mkdir -p /igz/java/conf
    mkdir -p /igz/java/crash
    cp /etc/config/v3io/* /igz/java/conf
    sed -i "s/CURRENT_NODE_IP/$LOCAL_V3IOD/g" $IGZ_DATA_CONFIG_FILE

    test -e ${HOME}/.bashrc || touch ${HOME}/.bashrc
    curl --disable -sSL -o ${IGUAZIO_HOME}/bin/v3ctl http://{{ .Values.igzV3ioUrl }}:8010/binaries/v3ctl
    chmod +x ${IGUAZIO_HOME}/bin/v3ctl

    curl --disable -sSL -o ${IGUAZIO_HOME}/bin/xcp http://{{ .Values.igzV3ioUrl }}:8010/binaries/xcp
    chmod +x ${IGUAZIO_HOME}/bin/xcp

    curl --disable -sSL -o ${IGUAZIO_HOME}/bin/tsdbctl http://{{ .Values.igzV3ioUrl }}:8010/binaries/tsdbctl
    chmod +x ${IGUAZIO_HOME}/bin/tsdbctl
    rm -f ${IGUAZIO_HOME}/.tsdb_alias
    if [ "${V3IO_API}" -a "${V3IO_ACCESS_KEY}" ]; then
      echo alias tsdbctl=\"tsdbctl --server ${V3IO_API} --access-key ${V3IO_ACCESS_KEY}\" >> ${IGUAZIO_HOME}/.tsdb_alias
      if [ "$(grep --count 'TSDB CONFIG' ${HOME}/.bashrc)" == "0" ]; then
        echo "# ----- TSDB CONFIG -----" >> ${HOME}/.bashrc
        echo "test -e ${IGUAZIO_HOME}/.tsdb_alias && source ${IGUAZIO_HOME}/.tsdb_alias" >> ${HOME}/.bashrc
        echo "# --- END TSDB CONFIG ---" >> ${HOME}/.bashrc
      fi
    fi

    # Create /tmp in default container if not exists and set premissions to 777 (See: IG-11583)
    hadoop fs -test -e v3io://users/tmp || hadoop fs -mkdir v3io://users/tmp
    hadoop fs -chmod 777 v3io://users/tmp
    rm -rf ${IGUAZIO_HOME}/.presto_alias
    touch ${IGUAZIO_HOME}/.presto_history
    echo alias prestojks=\"PRESTO_PASSWORD=$V3IO_ACCESS_KEY presto-cli --truststore-path /var/run/iguazio/secrets/tls.jks --truststore-password eac8b4b9848a48a18ace65e5df9597f6 --user $V3IO_USERNAME --password \$@\" >> ${IGUAZIO_HOME}/.presto_alias
    echo alias prestow=\"prestojks --server https://presto-api-presto.{{ .Values.igzDomain }} \$@\" >> ${IGUAZIO_HOME}/.presto_alias
    echo alias presto=\"prestow --catalog=v3io \$@\" >> ${IGUAZIO_HOME}/.presto_alias
    if [ "$(grep --count 'PRESTO CONFIG' ${HOME}/.bashrc)" == "0" ]; then
      echo "# ----- PRESTO CONFIG -----" >> ${HOME}/.bashrc
      echo "source ${IGUAZIO_HOME}/.presto_alias" >> ${HOME}/.bashrc
      echo "# --- END PRESTO CONFIG ---" >> ${HOME}/.bashrc
    fi
    echo alias hive=\"${HIVE_HOME}/bin/hive -hiveconf hive.exec.scratchdir=v3io://users/tmp/${V3IO_USERNAME}/hive -hiveconf hive.metastore.uris=thrift://hive-metastore:9083 \$@\" >> ${IGUAZIO_HOME}/.hive_alias

    if [ "$(grep --count 'HIVE CONFIG' ${HOME}/.bashrc)" == "0" ]; then
      echo "# ----- HIVE CONFIG -----" >> ${HOME}/.bashrc
      echo "test -e ${IGUAZIO_HOME}/.hive_alias" && echo "source ${IGUAZIO_HOME}/.hive_alias" >> ${HOME}/.bashrc
      echo "# --- END HIVE CONFIG ---" >> ${HOME}/.bashrc
    fi

    echo "echo ''" >> ${HOME}/.bashrc
    if [ "$(grep --count 'LOGO CONFIG' ${HOME}/.bashrc)" == "0" ]; then
      echo "# ----- LOGO CONFIG -----" >> ${HOME}/.bashrc
      echo "echo ''" >> ${HOME}/.bashrc
      echo "echo G1szODs1OzM3bSAgICAgICAgICAgJiYlJSUmICAgICAgICAgICAgICAgICAgIBtbMzg7NTs1bSAgJiMjJSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJiUjIyYgICAgICAgICAgICAgICAgICAgICAKG1szODs1OzM3bSAgICAgICAgICYjKC8vLy8vKCUgICAgICAgICAgICAgICAgIBtbMzg7NTs1bSAmLy4uKiMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmKCwuLigmICAgICAgICAgICAgICAgICAgICAKG1szODs1OzM3bSAgICAgICAgJiMoLy8vLy8vLyglICAgICAgICAgICAgICAgIBtbMzg7NTs1bSAgJSgoJSYgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJiMoIyYgICAgICAgICAgICAgICAgICAgICAKG1szODs1OzM3bSAgICAgICAgJiMvLy8vLy8vLyglICAgICAgICAgICAgICAgIBtbMzg7NTs1bSAgJSglJiAgICAgIygvKioqLygjJiAgICAmIy8oJSAgICAgICAmKC8jJiAgICAmJSgvKioqLygjJiAgICAlKC8vLy8vLy8vLy8vIyYgJSMjJiAgICAgJiUoLyoqKi8oIyYgICAgICAKG1szODs1OzM3bSAgICAgICAgICUoLy8vLy8vKCMmICAgICYmJiAgICAgICAgIBtbMzg7NTs1bSAmLy4uLyYgICYoLi4uLiwuLiAuLCgmICAlLy4uKCYgICAgICAjLC4sJSAgJigsLiAuLiwuLiAuLC8gICAjKi4uLi4uLi4uLi4uLyYmKCwuKiUgICYoLC4gLi4sLi4uLiwvJSAgICAKG1szODs1OzM3bSAgICAgICAgICAmJSgvLygjJSAgICYjKCgoKCgjJSAgICAgIBtbMzg7NTs1bSAmLy4uKiMgJSouLCgmJiAmJSgsLi4qJSAlLy4uKCYgICAgICAjLC4sJSAlLy4uLCglJiAmJigqLi4lICAgJiYmJiYlKCouLi4vJiAgKCwuLCMgJi8uLiwoJSYgJiUoKi4uKiMgICAKG1szODs1OzM3bSAgICAgICAgICAgICUoKCMmICAgJSgvLy8vLy8vKCUgICAgIBtbMzg7NTs1bSAmLy4uKiMlLy4uIyAgICAgICAjKi4uLyYlLy4uKCYgICAgICAjLC4sJSYoLC4sIyYgICAgICAlKi4oJiAgICAgICUvLi4uLyUgICAgKCwuLCMmKC4uLCMgICAgICAgJSouLi8mICAKG1szODs1OzM3bSAgICAgICAgICAgICYjIyUgICAmIy8vLy8vLy8vLyMmICAgIBtbMzg7NTs1bSAmLy4uKiMlLy4uJSAgICAgICAlKi4uLyYlLy4uKCYgICAgICAjLC4qJSYoLi4qJSAgICAgICAmKi4qJiAgICAlLy4uLi8lICAgICAgKCwuLCMmKC4uLCUgICAgICAgJS8uLi8lICAKG1szODs1OzM3bSAgICAgICAgICAgICUoKCMmICAgJSgvLy8vLy8vKCUgICAgIBtbMzg7NTs1bSAmLy4uKiMmKCwuKCYgICAgICYoLi4uLyYmLy4uKiMgICAgICYvLi4qJSAjLC4uLyUgICAgICYoLC4qJiAgJSgsLi4qJSAgICAgICAgKCwuLCMmIywuLi8lICAgICAmKCwuLigmICAKG1szODs1OzM3bSAgICAgICAgICAmIygvLy8jJSAgICYjKCgoKCgjJiAgICAgIBtbMzg7NTs1bSAmLy4uKiMgJigsLiwqKCgoKiwuLi4uLyYgJSouLiwvKCMjLywuLiwjICAmIywuLiwvKCMjLywuLi4qJiYoLC4uLiwvKCgoKCgoIyYmKCwuLCMgICMsLi4sLygjIy8sLi4sKCYgICAKG1szODs1OzM3bSAgICAgICAgICUoLy8vLy8vKCMmICAgICAmICAgICAgICAgIBtbMzg7NTs1bSAmKCwuKiUgICAlKi4uLi4uLioqLC4uLyYgICYoKiwuLi4uLi4sKCUgICAgICUoKi4uLi4uLiovKi4vJiUqLi4uLi4uLi4uLi4uLCMmIywuLCMgICAmKCosLi4uLi4uKiglICAgICAKG1szODs1OzM3bSAgICAgICAgJiMvLy8vLy8vLyglICAgICAgICAgICAgICAgIBtbMzg7NTs1bSAgICYmJiAgJiUjJSUmJSUmJiYjLC4uKCYgICAgICYmJSUlJSYgICAgICAgICAgICYlJSUlJiAgICYmICAmJiYmJiYmJiYmJiYmJiAgICYmJiAgICAgICAmJiUlJSUmICAgICAgICAKG1szODs1OzM3bSAgICAgICAgJiMoLy8vLy8vLygmICAgICAgICAgICAgICAgIBtbMzg7NTs1bSAgICAgICAgJigsLiooIyUjKC8sLi4vJiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKG1szODs1OzM3bSAgICAgICAgICYlKCgvLy8oIyUgICAgICAgICAgICAgICAgIBtbMzg7NTs1bSAgICAgICAgICAlLC4uLi4uLi4sKiMmICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKG1szODs1OzM3bSAgICAgICAgICAgICYmJiYmICAgICAgICAgICAgICAgICAgIBtbMzg7NTs1bSAgICAgICAgICAgJiYlIyMjJSUmICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAK | base64 --decode" >> ${HOME}/.bashrc
      echo "echo ''" >> ${HOME}/.bashrc
      echo "echo ''" >> ${HOME}/.bashrc
      echo "# --- END LOGO CONFIG ---" >> ${HOME}/.bashrc
    fi

    mkdir -p ${HOME}/.pythonlibs
    export PIP_PREFIX="${HOME}/.pythonlibs"
    export PYTHONPATH="${HOME}/.pythonlibs/lib/python3.6/site-packages:${PYTHONPATH}"
    export PATH="${PATH}:${HOME}/.pythonlibs/bin"

    if [ "$(grep --count 'IGUAZIO CONFIG' ${HOME}/.bashrc)" == "0" ]; then
      echo "# ----- IGUAZIO CONFIG -----" >> ${HOME}/.bashrc
      echo alias ll=\"ls -lah --color\" >> ${HOME}/.bashrc
      echo "source ${IGUAZIO_HOME}/bash-it.sh" >> ${HOME}/.bashrc
      echo "# --- END IGUAZIO CONFIG ---" >> ${HOME}/.bashrc
    fi

    if [ "$(grep --count 'KUBECTL AUTOCOMPLETION' ${HOME}/.bashrc)" == "0" ]; then
      echo "# ----- KUBECTL AUTOCOMPLETION -----" >> ${HOME}/.bashrc
      echo "if [ -f /etc/bash_completion ]; then" >> ${HOME}/.bashrc
      echo " . /etc/bash_completion" >> ${HOME}/.bashrc
      echo "fi" >> ${HOME}/.bashrc
      echo "if type -t _get_comp_words_by_ref > /dev/null 2>&1 && command -v kubectl > /dev/null 2>&1; then" >> ${HOME}/.bashrc
      echo " source <(kubectl completion bash)" >> ${HOME}/.bashrc
      echo "fi" >> ${HOME}/.bashrc
      echo "# ----- END KUBECTL AUTOCOMPLETION -----" >> ${HOME}/.bashrc
    fi

    # SSH related
    cp /var/run/iguazio/secrets/ssh/* /igz/.ssh 
    chown iguazio:iguazio /igz/.ssh/*
    chmod 0644 /igz/.ssh/*

    cp /var/run/iguazio/secrets/ssh/* /root/.ssh
    chmod 0644 /root/.ssh/*

    service ssh restart
    # END SSh related

    ttyd bash
kind: ConfigMap
metadata:
  labels:
    app: ssh
  name: ssh
  namespace: {{ .Values.namespace }}
